import Avatar3d from "../Avatar3d";
import { useEffect, useState } from "react";
import { getCurrentUser, UserRecord, logout } from "../../services/auth";
import { useNavigate } from "react-router-dom";
import Spiner from "../Spiner";
import StatLine from "../StatLine";

const ProfilePage = () => {
  const [user, setUser] = useState<UserRecord | null>(null);
  const [isLoading, setIsLoading] = useState(true);

  const navigate = useNavigate();

  useEffect(() => {
    const fetchUser = async () => {
      try {
        const data = await getCurrentUser();
        if (!data) {
          navigate("/login");
        } else {
          setUser(data);
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
        navigate("/login");
      } finally {
        setIsLoading(false);
      }
    };

    fetchUser();
  }, [navigate]);

  useEffect(() => {
    if (user) {
      document.title = `–ü—Ä–æ—Ñ–∏–ª—å | ${user.name}`;
    } else {
      document.title = "–ü—Ä–æ—Ñ–∏–ª—å | AniGurt";
    }
  }, [user]);

  const handleLogout = async () => {
    await logout();
    navigate("/login");
    window.location.reload();
  };

  if (isLoading) return <Spiner />;

  const stats: Record<string, number>[] = [
    { plane: 13 },
    { watch: 4 },
    { complete: 24 },
    { hold: 4 },
    { drope: 1 },
  ];

  return user ? (
    <div className="relative w-full min-h-screen flex flex-col lg:flex-row text-white p-6 lg:p-10">
      {/* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
      <div
        className="absolute inset-0 w-full h-full bg-center bg-cover"
        style={{ backgroundImage: "url('/bg.jpg')" }}
      ></div>
      <div className="absolute inset-0 bg-black opacity-70"></div>

      {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
      <div className="z-10 w-full lg:w-1/2 flex flex-col justify-around p-5">
        {/* –ù–∏–∫–Ω–µ–π–º */}
        <h1 className="text-3xl lg:text-4xl font-bold mb-6">{user.name}</h1>

        {/* –ë–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
        <div className="bg-gray-800 p-5 rounded-lg shadow-md mb-6">
          <h2 className="text-xl mb-3">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
          <div className="">
            <h1>–°–ø–∏—Å–æ–∫ –∞–Ω–∏–º–µ</h1>
            <StatLine stats={stats} />
          </div>
          <div className="flex justify-between gap-2 *:hover:text-[#e82c4c]">
            <a href="#">–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ </a>
            <a href="#">–°–º–æ—Ç—Ä—é </a>
            <a href="#">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ </a>
            <a href="#">–û—Ç–ª–æ–∂–µ–Ω–æ </a>
            <a href="#">–ë—Ä–æ—à–µ–Ω–æ </a>
          </div>
        </div>

        {/* –ú–µ–Ω—é */}
        <div className="bg-gray-800 p-5 rounded-lg shadow-md mb-6">
          <h2 className="text-xl mb-3">–ú–µ–Ω—é</h2>
          <ul className="space-y-1">
            <li>‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ</li>
            <li>üë• –î—Ä—É–∑—å—è</li>
            <li>
              ‚è≥ –í—Ä–µ–º—è –∑–∞ –∞–Ω–∏–º–µ:{" "}
              <span className="text-blue-400">300 —á–∞—Å–æ–≤</span>
            </li>
          </ul>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
        <button
          className="bg-red-500 p-3 lg:p-4 rounded mt-4 w-full lg:w-1/2 hover:bg-red-600 transition-colors duration-300"
          onClick={handleLogout}
        >
          –í—ã–π—Ç–∏
        </button>
      </div>

      {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å —Å 3D-–∞–≤–∞—Ç–∞—Ä–æ–º */}
      <div className="z-10 w-full lg:w-1/2 h-[400px] lg:h-full lg:absolute lg:bottom-0 lg:right-0">
        <Avatar3d />
      </div>
    </div>
  ) : null;
};

export default ProfilePage;
